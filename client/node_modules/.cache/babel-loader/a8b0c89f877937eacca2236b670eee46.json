{"ast":null,"code":"var _jsxFileName = \"/Users/johnnymcnamee/BreatheOut/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootswatch/dist/minty/bootstrap.css\";\nimport Navbar from \"./components/Navbar\";\nimport firebase, { storage } from \"./firebase/firebaseIndex\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Logout from \"./components/Logout\";\nimport Profile from \"./components/Profile\";\nimport PreviouslyWatched from \"./components/PreviouslyWatched\";\nimport MyAchievements from \"./components/MyAchievements\";\nimport MyWatchList from \"./components/MyWatchList\";\nimport Homepage from \"./components/Homepage\";\nimport YogaChoice from \"./components/YogaChoice\";\nimport MeditationChoice from \"./components/MeditationChoice\";\nimport MeditationContent from \"./components/MeditationContent\";\nimport YogaContent from \"./components/YogaContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      currentUser: null,\n      photo: null,\n      photoUrl: null\n    };\n    this.checkUser = this.checkUser.bind(this);\n  } // check if user is authenticated,\n  // if they are then set to true, otherwise false\n  // currentUser holds the user object when logged in\n\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      user ? this.setState(() => ({\n        authenticated: true,\n        currentUser: user,\n        photoUrl: localStorage.getItem(\"photoUrl\")\n      })) : this.setState(() => ({\n        authenticated: false,\n        currentUser: null\n      }));\n    }); //this.getImage();\n  }\n\n  checkUser() {\n    if (this.state.currentUser != null) {\n      let user = firebase.auth().currentUser;\n\n      if (user != null) {\n        user.providerData.forEach(function (profile) {\n          console.log(\"Sign-in provider: \" + profile.providerId);\n          console.log(\"  Provider-specific UID: \" + profile.uid);\n          console.log(\"  Name: \" + profile.displayName);\n          console.log(\"  Email: \" + profile.email);\n          console.log(\"  Photo URL: \" + profile.photoURL);\n        });\n      }\n    }\n  } // pulls the user's profile photo from firebase and stores it in state. pass to navbar and profile\n\n  /* getImage = async () => {\n    let userId = localStorage.getItem(\"userId\");\n    let imgName = \"test_image\"\n    if (userId !== \"\" || userId !== null) {\n      imgName = userId;\n    }\n    // storage is imported from firebase\n    // fix below to work when no image exists\n    const url = await storage.ref(\"images\").child(`${imgName}.jpg`).getDownloadURL();\n    //console.log(url);\n    this.setState({ imageUrl: url });\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Profile\",\n              render: props => /*#__PURE__*/_jsxDEV(Profile, {\n                imageUrl: this.state.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/PreviouslyWatched\",\n              render: props => /*#__PURE__*/_jsxDEV(PreviouslyWatched, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MyAchievements\",\n              render: props => /*#__PURE__*/_jsxDEV(MyAchievements, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MyWatchList\",\n              render: props => /*#__PURE__*/_jsxDEV(MyWatchList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Login\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Signup\",\n              render: props => /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Logout\",\n              render: props => /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Homepage\",\n              render: props => /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/YogaChoice\",\n              render: props => /*#__PURE__*/_jsxDEV(YogaChoice, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MeditationChoice\",\n              render: props => /*#__PURE__*/_jsxDEV(MeditationChoice, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MeditationContent\",\n              render: props => /*#__PURE__*/_jsxDEV(MeditationContent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/YogaContent\",\n              render: props => /*#__PURE__*/_jsxDEV(YogaContent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/johnnymcnamee/BreatheOut/client/src/App.js"],"names":["React","Component","Navbar","firebase","storage","Route","Switch","BrowserRouter","Login","Signup","Logout","Profile","PreviouslyWatched","MyAchievements","MyWatchList","Homepage","YogaChoice","MeditationChoice","MeditationContent","YogaContent","App","constructor","props","state","authenticated","currentUser","photo","photoUrl","checkUser","bind","componentDidMount","auth","onAuthStateChanged","user","setState","localStorage","getItem","providerData","forEach","profile","console","log","providerId","uid","displayName","email","photoURL","render","imageUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,qCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,IAAmBC,OAAnB,QAAkC,0BAAlC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,GAAN,SAAkBnB,SAAlB,CAA4B;AAC1BoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,KADJ;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD,GAXyB,CAY1B;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB3B,IAAAA,QAAQ,CAAC4B,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3CA,MAAAA,IAAI,GACA,KAAKC,QAAL,CAAc,OAAO;AACnBV,QAAAA,aAAa,EAAE,IADI;AAEnBC,QAAAA,WAAW,EAAEQ,IAFM;AAGnBN,QAAAA,QAAQ,EAAEQ,YAAY,CAACC,OAAb,CAAqB,UAArB;AAHS,OAAP,CAAd,CADA,GAMA,KAAKF,QAAL,CAAc,OAAO;AACnBV,QAAAA,aAAa,EAAE,KADI;AAEnBC,QAAAA,WAAW,EAAE;AAFM,OAAP,CAAd,CANJ;AAUD,KAXD,EADkB,CAalB;AACD;;AACDG,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKL,KAAL,CAAWE,WAAX,IAA0B,IAA9B,EAAoC;AAClC,UAAIQ,IAAI,GAAG9B,QAAQ,CAAC4B,IAAT,GAAgBN,WAA3B;;AAEA,UAAIQ,IAAI,IAAI,IAAZ,EAAkB;AAChBA,QAAAA,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0B,UAAUC,OAAV,EAAmB;AAC3CC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,OAAO,CAACG,UAA3C;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BF,OAAO,CAACI,GAAlD;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,OAAO,CAACK,WAAjC;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,OAAO,CAACM,KAAlC;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,OAAO,CAACO,QAAtC;AACD,SAND;AAOD;AACF;AACF,GA5CyB,CA8C1B;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,MAAM,EAAGzB,KAAD,iBAAW,QAAC,OAAD;AAAS,gBAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWyB;AAA9B;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,oBADP;AAEE,cAAA,MAAM,EAAG1B,KAAD,iBAAW,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,iBADP;AAEE,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBANF,eAUE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,cAAZ;AAA2B,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAdF,eAeE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,aAAZ;AAA0B,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAfF,eAgBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,mBADP;AAEE,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAoBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,oBADP;AAEE,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBApBF,eAwBE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,cAAZ;AAA2B,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAxBF,eAyBE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAsB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AAnGyB;;AAsG5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootswatch/dist/minty/bootstrap.css\";\nimport Navbar from \"./components/Navbar\";\nimport firebase, { storage } from \"./firebase/firebaseIndex\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Logout from \"./components/Logout\";\nimport Profile from \"./components/Profile\";\nimport PreviouslyWatched from \"./components/PreviouslyWatched\";\nimport MyAchievements from \"./components/MyAchievements\";\nimport MyWatchList from \"./components/MyWatchList\";\nimport Homepage from \"./components/Homepage\";\nimport YogaChoice from \"./components/YogaChoice\";\nimport MeditationChoice from \"./components/MeditationChoice\";\nimport MeditationContent from \"./components/MeditationContent\";\nimport YogaContent from \"./components/YogaContent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false,\n      currentUser: null,\n      photo: null,\n      photoUrl: null,\n    };\n    this.checkUser = this.checkUser.bind(this);\n  }\n  // check if user is authenticated,\n  // if they are then set to true, otherwise false\n  // currentUser holds the user object when logged in\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      user\n        ? this.setState(() => ({\n            authenticated: true,\n            currentUser: user,\n            photoUrl: localStorage.getItem(\"photoUrl\")\n          }))\n        : this.setState(() => ({\n            authenticated: false,\n            currentUser: null,\n          }));\n    });\n    //this.getImage();\n  }\n  checkUser() {\n    if (this.state.currentUser != null) {\n      let user = firebase.auth().currentUser;\n\n      if (user != null) {\n        user.providerData.forEach(function (profile) {\n          console.log(\"Sign-in provider: \" + profile.providerId);\n          console.log(\"  Provider-specific UID: \" + profile.uid);\n          console.log(\"  Name: \" + profile.displayName);\n          console.log(\"  Email: \" + profile.email);\n          console.log(\"  Photo URL: \" + profile.photoURL);\n        });\n      }\n    }\n  }\n\n  // pulls the user's profile photo from firebase and stores it in state. pass to navbar and profile\n  /* getImage = async () => {\n    let userId = localStorage.getItem(\"userId\");\n    let imgName = \"test_image\"\n    if (userId !== \"\" || userId !== null) {\n      imgName = userId;\n    }\n    // storage is imported from firebase\n    // fix below to work when no image exists\n    const url = await storage.ref(\"images\").child(`${imgName}.jpg`).getDownloadURL();\n    //console.log(url);\n    this.setState({ imageUrl: url });\n  }\n */\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Navbar/>\n          {/* <Homepage /> */}\n          <div>\n            <Switch>\n              <Route path=\"/Profile\" render={(props) => <Profile imageUrl={this.state.imageUrl} />} />\n              <Route\n                path=\"/PreviouslyWatched\"\n                render={(props) => <PreviouslyWatched />}\n              />\n              <Route\n                path=\"/MyAchievements\"\n                render={(props) => <MyAchievements />}\n              />\n              <Route path=\"/MyWatchList\" render={(props) => <MyWatchList />} />\n              <Route path=\"/Login\" render={(props) => <Login />} />\n              <Route path=\"/Signup\" render={(props) => <Signup />} />\n              <Route path=\"/Logout\" render={(props) => <Logout />} />\n              <Route path=\"/Homepage\" render={(props) => <Homepage />} />\n              <Route path=\"/YogaChoice\" render={(props) => <YogaChoice />} />\n              <Route\n                path=\"/MeditationChoice\"\n                render={(props) => <MeditationChoice />}\n              />\n              <Route\n                path=\"/MeditationContent\"\n                render={(props) => <MeditationContent />}\n              />\n              <Route path=\"/YogaContent\" render={(props) => <YogaContent />} />\n              <Route exact path=\"/\" render={(props) => <Login />} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}