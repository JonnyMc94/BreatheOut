{"ast":null,"code":"var _jsxFileName = \"/Users/johnnymcnamee/BreatheOut/client/src/components/watchBtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { FaEye } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WatchButton = props => {\n  _s();\n\n  const text = \"Add To Watchlist\";\n  const [watchText, setWatchText] = useState(text);\n  const [render, setRender] = useState(false);\n  let eyeStyle = {\n    color: \"blue\",\n    fontSize: \"1.5em\",\n    marginLeft: \"10px\"\n  };\n  useEffect(() => {\n    setRender(props.isWatch);\n    const timer = setTimeout(() => {\n      setWatchText(text);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [props.isWatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"watch-add\",\n      \"data-tip\": \"Add to Watchlist!\",\n      \"data-place\": \"bottom\",\n      \"data-effect\": \"float\",\n      \"data-delay-show\": \"250\",\n      onClick: () => setWatchText(\"Added to Watchlist\"),\n      children: [\" \", watchText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loveheart\",\n        children: /*#__PURE__*/_jsxDEV(FaEye, {\n          style: eyeStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WatchButton, \"pcseSq/HP9/GcdUSDtxovVQYjJ8=\");\n\n_c = WatchButton;\nexport default WatchButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchButton\");","map":{"version":3,"sources":["/Users/johnnymcnamee/BreatheOut/client/src/components/watchBtn.js"],"names":["React","useState","useEffect","ReactTooltip","FaEye","WatchButton","props","text","watchText","setWatchText","render","setRender","eyeStyle","color","fontSize","marginLeft","isWatch","timer","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,IAAI,GAAG,kBAAb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACM,IAAD,CAA1C;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,MAAIW,QAAQ,GAAG;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE,OAA3B;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAAf;AAEAb,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,SAAS,CAACL,KAAK,CAACU,OAAP,CAAT;AAEA,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BT,MAAAA,YAAY,CAACF,IAAD,CAAZ;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO,MAAMY,YAAY,CAACF,KAAD,CAAzB;AAED,GATQ,EASN,CAACX,KAAK,CAACU,OAAP,CATM,CAAT;AAWA,sBACE;AAAA,4BACA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AACI,MAAA,EAAE,EAAC,WADP;AAEI,kBAAS,mBAFb;AAGI,oBAAW,QAHf;AAII,qBAAY,OAJhB;AAKI,yBAAgB,KALpB;AAMI,MAAA,OAAO,EAAE,MAAMP,YAAY,CAAC,oBAAD,CAN/B;AAAA,sBAOMD,SAPN,eAQI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEI;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAaE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMP,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect }from 'react'\nimport ReactTooltip from 'react-tooltip';\nimport { FaEye } from \"react-icons/fa\";\n\nconst WatchButton = (props) => {\n\n  const text = \"Add To Watchlist\";\n  const [watchText, setWatchText] = useState(text);\n  const [render, setRender] = useState(false);\n  let eyeStyle = { color: \"blue\", fontSize: \"1.5em\", marginLeft: \"10px\"};\n  \n  useEffect(() => {\n    \n    setRender(props.isWatch);\n\n    const timer = setTimeout(() => {\n      setWatchText(text);\n    }, 3000);\n    return () => clearTimeout(timer);\n\n  }, [props.isWatch] )\n  \n  return (\n    <div>\n    <button className=\"btn btn-primary\"\n        id=\"watch-add\"\n        data-tip=\"Add to Watchlist!\"\n        data-place=\"bottom\"\n        data-effect=\"float\"\n        data-delay-show='250'\n        onClick={() => setWatchText(\"Added to Watchlist\")}\n      > { watchText }\n        <span className=\"loveheart\">\n          <FaEye style={eyeStyle} />\n        </span>\n      </button>\n      <ReactTooltip />\n    </div>\n    \n  )\n}\n\nexport default WatchButton;"]},"metadata":{},"sourceType":"module"}