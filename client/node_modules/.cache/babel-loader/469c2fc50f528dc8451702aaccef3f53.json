{"ast":null,"code":"var _jsxFileName = \"/Users/johnnymcnamee/BreatheOut/client/src/components/Signup.js\";\nimport React, { Component } from \"react\";\nimport Firebase from \"../firebase/firebaseIndex\";\nimport \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.insertUser = async () => {\n      // this is probably wrong!!?? no preventdefault??\n      try {\n        const email = this.state.email;\n        const username = this.state.username;\n        const body = {\n          email,\n          username\n        };\n        console.log(body);\n        const response = await fetch(\"http://localhost:5000/SignUp\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }); //console.log(response);\n\n        const jsonData = await response.json();\n        console.log(jsonData); // set local storage details for logged in user\n\n        localStorage.setItem('userEmail', jsonData[0].email);\n        localStorage.setItem('userId', jsonData[0].id);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      error: null,\n      profileData: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.getDataFromDatabase();\n    } catch (error) {\n      console.log(error);\n      this.setState({\n        error: error\n      });\n    }\n  }\n\n  getDataFromDatabase() {\n    // download and create json array of profile data\n    let ref1 = Firebase.database().ref(\"profiles\");\n    ref1.on(\"value\", snapshot => {\n      // json array\n      let msgData = snapshot.val();\n      let newMessagesFromDB = [];\n\n      for (let m in msgData) {\n        // create a json object of our object\n        let currObject = {\n          email: msgData[m].email,\n          id: msgData[m].id,\n          name: msgData[m].name\n        }; // add it to the local array\n\n        newMessagesFromDB.push(currObject);\n      } // end of for loop\n      // set state\n\n\n      this.setState({\n        profileData: newMessagesFromDB\n      });\n    });\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    // submit to create new user\n    event.preventDefault();\n    const {\n      email,\n      password,\n      username\n    } = this.state;\n    Firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n      console.log(\"User account created\"); // add the new user to the database\n\n      this.insertUser();\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n    });\n    let user = Firebase.auth().currentUser;\n    user.updateProfile({\n      displayName: username\n    }).then(user => {\n      console.log(\"username updated\");\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      username,\n      error\n    } = this.state;\n    const handleInput = this.handleInputChange;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"ERROR: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"username\",\n              name: \"username\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/johnnymcnamee/BreatheOut/client/src/components/Signup.js"],"names":["React","Component","Firebase","Signup","constructor","props","insertUser","email","state","username","body","console","log","response","fetch","method","headers","JSON","stringify","jsonData","json","localStorage","setItem","id","err","error","message","password","profileData","handleInputChange","bind","handleSubmit","componentDidMount","getDataFromDatabase","setState","ref1","database","ref","on","snapshot","msgData","val","newMessagesFromDB","m","currObject","name","push","event","target","value","preventDefault","auth","createUserWithEmailAndPassword","then","user","catch","currentUser","updateProfile","displayName","render","handleInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Firebase from \"../firebase/firebaseIndex\";\nimport \"firebase/database\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      error: null,\n      profileData: [],\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.getDataFromDatabase();\n    } catch (error) {\n      console.log(error);\n      this.setState({ error: error });\n    }\n  }\n\n  getDataFromDatabase() {\n    // download and create json array of profile data\n    let ref1 = Firebase.database().ref(\"profiles\");\n\n    ref1.on(\"value\", (snapshot) => {\n      // json array\n      let msgData = snapshot.val();\n      let newMessagesFromDB = [];\n      for (let m in msgData) {\n        // create a json object of our object\n        let currObject = {\n          email: msgData[m].email,\n          id: msgData[m].id,\n          name: msgData[m].name,\n        };\n        // add it to the local array\n        newMessagesFromDB.push(currObject);\n      } // end of for loop\n      // set state\n      this.setState({ profileData: newMessagesFromDB });\n    });\n  }\n\n  insertUser = async () => {\n    // this is probably wrong!!?? no preventdefault??\n    try {\n      const email = this.state.email;\n      const username = this.state.username;\n      const body = { email, username };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/SignUp\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      //console.log(response);\n      const jsonData = await response.json();\n      console.log(jsonData);\n      // set local storage details for logged in user\n      localStorage.setItem('userEmail', jsonData[0].email);\n      localStorage.setItem('userId', jsonData[0].id);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  handleInputChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    // submit to create new user\n    event.preventDefault();\n    const { email, password, username } = this.state;\n    Firebase.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(\"User account created\");\n        // add the new user to the database\n        this.insertUser();\n      })\n      .catch((error) => {\n        this.setState({ error: error });\n      });\n\n    let user = Firebase.auth().currentUser;\n\n    user\n      .updateProfile({\n        displayName: username,\n      })\n      .then((user) => {\n        console.log(\"username updated\");\n      })\n      .catch((error) => {\n        this.setState({ error: error });\n      });\n  }\n\n  render() {\n    const { email, password, username, error } = this.state;\n    const handleInput = this.handleInputChange;\n\n    return (\n      <div className=\"container\">\n        <legend>Sign Up</legend>\n        {error && (\n          <p>\n            <strong>ERROR: {error.message}</strong>\n          </p>\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <fieldset>\n            <div className=\"form-group row\">\n              <label for=\"username\">Username</label>\n              <input\n                className=\"form-control\"\n                type=\"username\"\n                name=\"username\"\n                placeholder=\"Enter username\"\n                value={username}\n                onChange={handleInput}\n              />\n            </div>\n            <div className=\"form-group row\">\n              <label for=\"email\">Email Address</label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={handleInput}\n              />\n            </div>\n            <div className=\"form-group row\">\n              <label for=\"password\">Password</label>\n              <input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={handleInput}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n          </fieldset>\n\n          <br />\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}