{"ast":null,"code":"var _jsxFileName = \"/Users/johnnymcnamee/BreatheOut/client/src/components/YogaContent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport YoutubePlayer from './YoutubePlayer';\nimport VideoBar from './videoBar.js';\nimport { useEffect, useState } from 'react';\nimport { GrYoga } from 'react-icons/gr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YogaContent = props => {\n  _s();\n\n  let yogaStyle = {\n    color: \"#7FDBFF\",\n    fontSize: \"2.5em\"\n  }; // const [url, setURL] = useState(\"\");\n  // const [title, setTitle] = useState(\"\");\n  // const [desc, setDesc] = useState(\"\");\n\n  const [videoId, setVideoId] = useState(\"\");\n  const [favListId, setFavListId] = useState([]);\n  const [watchListId, setWatchListId] = useState([]);\n  const [isFav, setIsFav] = useState(false);\n  const [isWatch, setIsWatch] = useState(false); // setURL(props.location.state.param1);\n  // setTitle(props.location.state.param2);\n  // setDesc(props.location.state.param3);\n  //setVideoId(props.location.state.param4);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchFavourites();\n    fetchWatchList();\n    checkLists();\n  }, []);\n\n  const fetchFavourites = async () => {\n    try {\n      const id = localStorage.getItem(\"userId\");\n      console.log(id);\n      const response = await fetch(`http://localhost:5000/Favourites/${id}`, {\n        method: \"GET\"\n      }); // results from database in JSON\n\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setFavListId(jsonData.map(({\n        id\n      }) => id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchWatchList = async () => {\n    try {\n      const id = localStorage.getItem(\"userId\");\n      console.log(id);\n      const response = await fetch(`http://localhost:5000/MyWatchList/${id}`, {\n        method: \"GET\"\n      }); // results from database in JSON\n\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setWatchListId(jsonData.map(({\n        id\n      }) => id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const checkLists = () => {\n    if (favListId.includes(videoId)) {\n      setIsFav(true);\n    }\n\n    if (watchListId.includes(videoId)) {\n      setIsWatch(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron vidWithBtns\",\n    id: \"yoga-content \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-3 \",\n      id: \"yoga-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(GrYoga, {\n          style: yogaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 50\n      }, this), \"Title content will go here\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      id: \"yoga-para\",\n      children: \"Some information about the exercise will go here which will be stored with the video in the database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YoutubePlayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoBar, {\n      isFav: isFav,\n      isWatch: isWatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"page-footer font-small blue\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-copyright text-center py-3\",\n        children: \"\\xA9 2021 Copyright\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(YogaContent, \"1dPT3ctu9nTgz6F8+5S74hdMmOA=\");\n\n_c = YogaContent;\nexport default YogaContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"YogaContent\");","map":{"version":3,"sources":["/Users/johnnymcnamee/BreatheOut/client/src/components/YogaContent.js"],"names":["React","YoutubePlayer","VideoBar","useEffect","useState","GrYoga","YogaContent","props","yogaStyle","color","fontSize","videoId","setVideoId","favListId","setFavListId","watchListId","setWatchListId","isFav","setIsFav","isWatch","setIsWatch","window","scrollTo","fetchFavourites","fetchWatchList","checkLists","id","localStorage","getItem","console","log","response","fetch","method","jsonData","json","map","err","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport YoutubePlayer from './YoutubePlayer'\nimport VideoBar from './videoBar.js'\nimport { useEffect, useState } from 'react'\nimport { GrYoga } from 'react-icons/gr'\n\nconst YogaContent = (props) => {\n\n  let yogaStyle = { color: \"#7FDBFF\", fontSize: \"2.5em\" };\n  \n  // const [url, setURL] = useState(\"\");\n  // const [title, setTitle] = useState(\"\");\n  // const [desc, setDesc] = useState(\"\");\n  const [videoId, setVideoId] = useState(\"\");\n  const [favListId, setFavListId] = useState([]);\n  const [watchListId, setWatchListId] = useState([]);\n  const [isFav, setIsFav] = useState(false);\n  const [isWatch, setIsWatch] = useState(false);\n  \n  // setURL(props.location.state.param1);\n  // setTitle(props.location.state.param2);\n  // setDesc(props.location.state.param3);\n  //setVideoId(props.location.state.param4);\n  \n  useEffect(() => {\n    window.scrollTo(0, 0)\n    fetchFavourites()\n    fetchWatchList()\n    checkLists()\n  }, [])\n\n  const fetchFavourites = async () => {\n\n    try {\n\n      const id = localStorage.getItem(\"userId\");\n      console.log(id);\n\n      const response = await fetch(`http://localhost:5000/Favourites/${id}`, {\n        method: \"GET\",\n      });\n\n      // results from database in JSON\n      const jsonData = await response.json();\n      console.log(jsonData);\n\n      setFavListId(jsonData.map(({ id }) => id));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const fetchWatchList = async () => {\n\n    try {\n\n      const id = localStorage.getItem(\"userId\");\n      console.log(id);\n\n      const response = await fetch(`http://localhost:5000/MyWatchList/${id}`, {\n        method: \"GET\",\n      });\n\n      // results from database in JSON\n      const jsonData = await response.json();\n      console.log(jsonData);\n\n      setWatchListId(jsonData.map(({ id }) => id));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const checkLists = () => {\n    \n    if (favListId.includes(videoId)) {\n      setIsFav(true);\n    }\n    if (watchListId.includes(videoId)) {\n      setIsWatch(true);\n    }\n\n  }\n  \n  return (\n\n    <div className=\"jumbotron vidWithBtns\" id=\"yoga-content \">\n      <h1 className=\"display-3 \" id=\"yoga-title\"><span><GrYoga style={ yogaStyle } /></span>Title content will go here</h1>\n      <p className=\"lead\" id=\"yoga-para\">Some information about the exercise will go here which will be stored with the video in the database</p>\n      <YoutubePlayer />\n      <VideoBar isFav={isFav} isWatch={isWatch} />\n      <footer className=\"page-footer font-small blue\">\n        <div className=\"footer-copyright text-center py-3\">© 2021 Copyright</div>\n      </footer>\n    </div>\n    \n\n  )};\n\nexport default YogaContent;"]},"metadata":{},"sourceType":"module"}